name: DockerHub Push

on:
  workflow_call:
    inputs:
      dockerfile:
        required: true
        type: string
        description: "Path to Dockerfile"
      repository:
        required: true
        type: string
        description: "DockerHub repository name"
      tag:
        required: true
        type: string
        description: "Image tag"
      build_args:
        required: false
        type: string
        description: "JSON object of build args"
        default: "{}"
      platforms:
        required: false
        type: string
        description: "Comma-separated list of platforms"
        default: "linux/amd64,linux/arm64"
      context:
        required: false
        type: string
        default: "."
        description: "Docker build context path"
    secrets:
      dockerhub-username:
        required: true
      dockerhub-token:
        required: true

jobs:
  build:
    uses: ./.github/workflows/_docker-build.yml
    with:
      context: ${{ inputs.context }} 
      dockerfile: ${{ inputs.dockerfile }}
      image_name: local-build
      tag: ${{ inputs.tag }}
      build_args: ${{ inputs.build_args }}
      platforms: ${{ inputs.platforms }}

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker images artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./images

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.dockerhub-username }}
          password: ${{ secrets.dockerhub-token }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Load and Push Images
        run: |
          # Загружаем и пушим образы с единым тегом
          MANIFEST_TAG="madpixels/${{ inputs.repository }}:${{ inputs.tag }}"

          echo "Creating and pushing multi-arch manifest: $MANIFEST_TAG"

          docker buildx create --name multi-builder --use || true

          # Создаём и пушим общий манифест
          docker buildx imagetools create --tag "$MANIFEST_TAG" \
            madpixels/${{ inputs.repository }}:${{ inputs.tag }}-linux/amd64 \
            madpixels/${{ inputs.repository }}:${{ inputs.tag }}-linux/arm64

          echo "Multi-arch manifest created successfully."
