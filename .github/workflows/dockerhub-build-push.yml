name: DockerHub Push

on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
        description: "The DockerHub repository name where the image will be pushed. Example: 'username/repository'."
      tag:
        required: true
        type: string
        description: "The tag for the Docker image to be used during the push. Example: 'v1.0.0'."
      build_args:
        required: false
        type: string
        description: >
          JSON object containing build arguments to pass to the Dockerfile.
          Example: '{"ARG1": "value1", "ARG2": "value2"}'.
        default: "{}"
      platforms:
        required: false
        type: string
        description: >
          A comma-separated list of platforms for building a multi-architecture image.
          Example: 'linux/amd64,linux/arm64'.
        default: "linux/amd64,linux/arm64"
      context:
        required: false
        type: string
        description: >
          The build context path for Docker (a directory containing the Dockerfile).
        default: "."
    secrets:
      docker_user:
        required: true
      docker_token:
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-24.04
    steps:
      - name: Download Docker Context
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.context }}
          path: ${{ inputs.context }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.docker_user }}
          password: ${{ secrets.docker_token }}

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Build and Push Multi-Arch Image
        run: |
          BUILD_ARGS=""
          for arg in $(echo '${{ inputs.build_args }}' | jq -r 'to_entries | .[] | "--build-arg \(.key)=\(.value)"'); do
            BUILD_ARGS="$BUILD_ARGS $arg"
          done

          docker buildx build \
            --platform ${{ inputs.platforms }} \
            --file ${{ inputs.context }}/Dockerfile \
            $BUILD_ARGS \
            -t ${{ inputs.repository }}:${{ inputs.tag }} \
            --push \
            ${{ inputs.context }}
