# .github/workflows/_github-release.yml
name: GitHub Release

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      working-directory:
        required: true
        type: string
      binaries:
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: artifacts

      - name: Create release
        id: create_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = '${{ inputs.version }}';
            const resp = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: version,
              release_name: `Release ${version}`,
              draft: false,
              prerelease: false
            });
            core.setOutput('release_id', resp.data.id);
            core.setOutput('upload_url', resp.data.upload_url);

      - name: Upload release files
        run: |
          ARTIFACTS='${{ inputs.binaries }}'
          if [ -z "$ARTIFACTS" ]; then
            echo "No binaries JSON provided"
            exit 1
          fi

          URL=${{ steps.create_release.outputs.upload_url }}
          TOKEN=${{ secrets.GITHUB_TOKEN }}

          for bin in $(echo "$ARTIFACTS" | jq -r '.[]'); do
            for plat_arch in linux_amd64 linux_arm darwin_arm; do
              FILE_PATH="artifacts/${bin}_${plat_arch}/action-${bin}"
              FILE_NAME="action-${bin}-${plat_arch}"
              if [ -f "$FILE_PATH" ]; then
                echo "Uploading $FILE_NAME"
                curl -X POST "$URL?name=$FILE_NAME" \
                  -H "Authorization: Bearer $TOKEN" \
                  -H "Content-Type: application/octet-stream" \
                  --data-binary "@$FILE_PATH"
              else
                echo "Missing $FILE_PATH"
              fi
            done
          done
