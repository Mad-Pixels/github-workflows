# .github/workflows/github-release.yml
name: GitHub Release

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      working-directory:
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: build-artifacts

      - name: Create release
        id: create_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = '${{ inputs.version }}';
            const resp = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: version,
              release_name: `Release ${version}`,
              draft: false,
              prerelease: false
            });
            core.setOutput('release_id', resp.data.id);
            core.setOutput('upload_url', resp.data.upload_url);

      - name: Upload release files
        run: |
          UPLOAD_URL=${{ steps.create_release.outputs.upload_url }}
          TOKEN=${{ secrets.GITHUB_TOKEN }}
          find build-artifacts -type f | while read file; do
            fname=$(basename "$file")
            echo "Uploading $fname"
            curl -X POST "$UPLOAD_URL?name=$fname" \
              -H "Authorization: Bearer $TOKEN" \
              -H "Content-Type: application/octet-stream" \
              --data-binary "@$file"
          done
