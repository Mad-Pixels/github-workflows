# .github/workflows/rust-ci.yml
name: Rust CI

on:
  push:
    branches: [ "**" ]
    tags:
      - 'v*.*.*'
    paths:
      - "**.rs"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
  pull_request:
    branches: [ "**" ]
    paths:
      - "**.rs"
      - "**/Cargo.toml"
      - "**/Cargo.lock"

jobs:
  check-discover:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Rust Check
        if: >
          (github.event_name == 'push' && github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')) ||
          (github.event_name == 'pull_request')
        uses: your-org/your-repo/.github/workflows/_rust-check.yml@main
        with:
          working-directory: ${{ inputs.working-directory }}

      - name: Discover Binaries
        if: >
          (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main') ||
          (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
          (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
        id: discover-binaries
        run: |
          BIN_DIR="${{ github.workspace }}/${{ inputs.working-directory }}/${{ inputs.binaries-directory }}"
          if [ -d "$BIN_DIR" ]; then
            BINARIES=$(ls "$BIN_DIR" | jq -R -s -c 'split("\n") | map(select(length > 0))')
          else
            BINARIES='[]'
          fi
          echo "binaries=$BINARIES" >> $GITHUB_OUTPUT

    outputs:
      discovered_binaries: ${{ steps.discover-binaries.outputs.binaries }}

  build:
    runs-on: ubuntu-latest
    needs: [check-discover]
    steps:
      - name: Call Rust Build
        id: build-step
        uses: your-org/your-repo/.github/workflows/_rust-build.yml@main
        with:
          working-directory: ${{ inputs.working-directory }}
          binaries: ${{ needs.check-discover.outputs.discovered_binaries }}

      - name: Set Build Outputs
        id: collect-outputs
        run: echo "build_binaries=${{ steps.build-step.outputs.binaries }}" >> $GITHUB_OUTPUT

    outputs:
      build_binaries: ${{ steps.collect-outputs.outputs.build_binaries }}

  release:
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'push') &&
      (startsWith(github.ref, 'refs/tags/'))
    needs: build
    steps:
      - name: Call GitHub Release
        uses: your-org/your-repo/.github/workflows/_github-release.yml@main
        with:
          working-directory: ${{ inputs.working-directory }}
          binaries: ${{ needs.build.outputs.build_binaries }}
          version: ${{ github.ref_name }}
