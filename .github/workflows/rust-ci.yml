name: Rust CI

on:
  push:
    branches: [ "**" ]
    tags:
      - 'v*.*.*'
    paths:
      - "**.rs"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
  pull_request:
    branches: [ "**" ]
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
        description: "Directory containing Rust project"
      binaries-directory:
        required: false
        type: string
        description: "Directory containing sources for build"
        default: "bin"
      version:
        required: false
        type: string
        description: "Release version (only for release)"
        default: ""
    secrets:
      GITHUB_TOKEN:
        required: false

jobs:
  check:
    if: >
      (github.event_name == 'push' && github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')) || 
      (github.event_name == 'pull_request')
    uses: Mad-Pixels/github-workflows/.github/workflows/_rust-check.yml@dev
    with:
      working-directory: ${{ inputs.working-directory }}

  discover:
    if: >
      (github.event_name == 'pull_request' 
       && github.event.pull_request.base.ref == 'main') ||
      (github.event_name == 'push' 
       && github.ref == 'refs/heads/main') ||
      (github.event_name == 'push' 
       && startsWith(github.ref, 'refs/tags/'))
    runs-on: ubuntu-latest
    outputs:
      binaries: ${{ steps.discover-binaries.outputs.binaries }}
    steps:
      - uses: actions/checkout@v3
      - id: discover-binaries
        run: |
          BINARIES=$(ls ${{ inputs.working-directory }}/${{ inputs.binaries-directory }} | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "binaries=$BINARIES" >> "$GITHUB_OUTPUT"

  build:
    if: >
      (github.event_name == 'pull_request' 
       && github.event.pull_request.base.ref == 'main') ||
      (github.event_name == 'push' 
       && github.ref == 'refs/heads/main') ||
      (github.event_name == 'push' 
       && startsWith(github.ref, 'refs/tags/'))
    needs: [check, discover]
    uses: Mad-Pixels/github-workflows/.github/workflows/_rust-build.yml@dev
    with:
      working-directory: ${{ inputs.working-directory }}
      binaries: ${{ needs.discover.outputs.binaries }}

  release:
    if: >
      (github.event_name == 'push')
      && (startsWith(github.ref, 'refs/tags/'))
    needs: build
    uses: Mad-Pixels/github-workflows/.github/workflows/_github-release.yml@dev
    with:
      working-directory: ${{ inputs.working-directory }}
      binaries: ${{ needs.build.outputs.binaries }}
      version: ${{ github.ref_name }}
    secrets:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
