name: DockerHub Push
description: Build and push multi-platform Docker images to DockerHub.

inputs:
  docker_user:
    description: 'DockerHub username'
    required: true
  docker_token:
    description: 'DockerHub access token'
    required: true

  repository:
    description: 'DockerHub repository name (e.g. username/image)'
    required: true
  tag:
    description: 'Tag for the Docker image (e.g. v1.0.0)'
    required: true

  platforms:
    description: 'Target platforms (comma-separated)'
    required: false
    default: 'linux/amd64,linux/arm64'

  build_args:
    description: 'Build arguments as JSON object (e.g. {"VERSION":"1.0"})'
    required: false
    default: '{}'

  artifact_name:
    description: 'Optional artifact name to download and use as context'
    required: false
    default: ''

  context_path:
    description: 'Build context directory'
    required: false
    default: '.'

  dockerfile_path:
    description: 'Path to Dockerfile (relative to context_path)'
    required: false
    default: 'Dockerfile'

runs:
  using: composite
  steps:
    - name: Determine context path
      id: ctx
      shell: bash
      run: |
        if [[ -n "${{ inputs.artifact_name }}" ]]; then
          echo "using_artifact=true" >> "$GITHUB_OUTPUT"
          echo "context=./artifact/${{ inputs.context_path }}" >> "$GITHUB_OUTPUT"
        else
          echo "using_artifact=false" >> "$GITHUB_OUTPUT"
          echo "context=${{ inputs.context_path }}" >> "$GITHUB_OUTPUT"
        fi

    - name: Checkout repository
      if: steps.ctx.outputs.using_artifact == 'false'
      uses: actions/checkout@v4

    - name: Download artifact
      if: steps.ctx.outputs.using_artifact == 'true'
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact_name }}
        path: ./artifact

    - name: DockerHub login
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.docker_user }}
        password: ${{ inputs.docker_token }}

    - name: Setup QEMU (for cross-platform builds)
      uses: docker/setup-qemu-action@v3

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true

    - name: Build and push Docker image
      shell: bash
      run: |
        CONTEXT="${{ steps.ctx.outputs.context }}"
        DOCKERFILE="${CONTEXT}/${{ inputs.dockerfile_path }}"

        echo "📦 Building from context: $CONTEXT"
        echo "📝 Dockerfile: $DOCKERFILE"

        BUILD_ARGS=""
        if [[ "${{ inputs.build_args }}" != "{}" ]]; then
          echo "🔧 Parsing build args..."
          echo '${{ inputs.build_args }}' | jq -r 'to_entries[] | "--build-arg \(.key)=\(.value)"' | while read -r arg; do
            BUILD_ARGS="$BUILD_ARGS $arg"
          done
        fi

        docker buildx build \
          --platform "${{ inputs.platforms }}" \
          --file "$DOCKERFILE" \
          $BUILD_ARGS \
          -t "${{ inputs.repository }}:${{ inputs.tag }}" \
          -t "${{ inputs.repository }}:latest" \
          --push \
          "$CONTEXT"

    - name: Docker Build Summary
      shell: bash
      run: |
        echo "## 🐳 Docker Image Summary" >> "$GITHUB_STEP_SUMMARY"
        echo "- Repository: \`${{ inputs.repository }}\`" >> "$GITHUB_STEP_SUMMARY"
        echo "- Tags:" >> "$GITHUB_STEP_SUMMARY"
        echo "  - \`${{ inputs.repository }}:${{ inputs.tag }}\`" >> "$GITHUB_STEP_SUMMARY"
        echo "  - \`${{ inputs.repository }}:latest\`" >> "$GITHUB_STEP_SUMMARY"
        echo "- Platforms: \`${{ inputs.platforms }}\`" >> "$GITHUB_STEP_SUMMARY"
        echo "- Context: \`${{ steps.ctx.outputs.context }}\`" >> "$GITHUB_STEP_SUMMARY"
        echo "- Dockerfile: \`${{ steps.ctx.outputs.context }}/${{ inputs.dockerfile_path }}\`" >> "$GITHUB_STEP_SUMMARY"

        if [[ "${{ inputs.build_args }}" != "{}" ]]; then
          echo "- Build args:" >> "$GITHUB_STEP_SUMMARY"
          echo '```json' >> "$GITHUB_STEP_SUMMARY"
          echo '${{ inputs.build_args }}' | jq . >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
        fi
