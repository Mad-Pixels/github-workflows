name: 'Terraform Runner'
description: 'Invoke terraform actions'

inputs:
  aws_access_key_id:
    description: 'AWS access key ID (optional if using OIDC)'
    required: false
  aws_secret_access_key:
    description: 'AWS secret access key (optional if using OIDC)'
    required: false
  aws_region:
    description: 'AWS region'
    required: true
  role_to_assume:
    description: 'AWS IAM role ARN to assume (for OIDC authentication)'
    required: false

  tf_dir:
    description: 'Path to Terraform config'
    required: true
  tf_workspace:
    description: 'Terraform workspace (leave empty to use default)'
    required: false
    default: ""
  tf_command:
    description: 'Terraform command: [plan, apply, destroy]'
    required: true
  tf_vars:
    description: 'Extra `-var` flags (CLI)'
    required: false
    default: ''
  tf_version:
    description: 'Terraform version'
    required: false
    default: '1.8.5'

  backend_bucket:
    description: 'S3 bucket for state'
    required: true
  backend_key:
    description: 'S3 key for state'
    required: true
  backend_region:
    description: 'Backend region'
    required: true

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Configure AWS authentication
      uses: Mad-Pixels/github-workflows/internal/aws-auth@dev3
      with:
        aws_secret_key: ${{ inputs.aws_secret_access_key }}
        aws_access_key: ${{ inputs.aws_access_key_id }}
        role_to_assume: ${{ inputs.role_to_assume }}
        aws_region: ${{ inputs.aws_region }}

    - name: Export AWS region for Terraform
      shell: bash
      run: echo "TF_VAR_aws_region=${{ inputs.aws_region }}" >> $GITHUB_ENV

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ inputs.tf_version }}

    - name: Write backend_aws.hcl
      working-directory: ${{ inputs.tf_dir }}
      shell: bash
      run: |
        echo "bucket  = \"${{ inputs.backend_bucket }}\""  >  backend_aws.hcl
        echo "key     = \"${{ inputs.backend_key }}\""     >> backend_aws.hcl
        echo "region  = \"${{ inputs.backend_region }}\""  >> backend_aws.hcl
        echo "encrypt = true"                              >> backend_aws.hcl

    - name: Write backend.tf
      working-directory: ${{ inputs.tf_dir }}
      shell: bash
      run: |
        echo 'terraform {'           >  backend.tf
        echo '  backend "s3" {}'     >> backend.tf
        echo '}'                     >> backend.tf

    - name: Terraform Init
      shell: bash
      working-directory: ${{ inputs.tf_dir }}
      run: terraform init -input=false -reconfigure -backend-config=backend_aws.hcl

    - name: Select or create workspace
      if: inputs.tf_workspace != ''
      shell: bash
      working-directory: ${{ inputs.tf_dir }}
      run: |
        terraform workspace select "${{ inputs.tf_workspace }}" \
          || terraform workspace new "${{ inputs.tf_workspace }}"
        echo "Current workspace: $(terraform workspace show)"

    - name: Run Terraform Validate
      shell: bash
      working-directory: ${{ inputs.tf_dir }}
      run: terraform validate

    - name: Run Terraform Command
      shell: bash
      working-directory: ${{ inputs.tf_dir }}
      run: |
        case "${{ inputs.tf_command }}" in
          plan)
            terraform plan -input=false ${{ inputs.tf_vars }} || exit 1
            ;;
          apply)
            terraform apply -input=false -auto-approve ${{ inputs.tf_vars }} || exit 1
            ;;
          destroy)
            terraform destroy -input=false -auto-approve ${{ inputs.tf_vars }} || exit 1
            ;;
          *)
            echo "❌ Unknown tf_command: ${{ inputs.tf_command }}" >&2
            exit 1
            ;;
        esac
    
    - name: Terraform Summary
      shell: bash
      run: |
        echo "## 🛠️ Terraform Execution Summary" >> "$GITHUB_STEP_SUMMARY"
        echo "- Command: \`${{ inputs.tf_command }}\`" >> "$GITHUB_STEP_SUMMARY"
        echo "- Directory: \`${{ inputs.tf_dir }}\`" >> "$GITHUB_STEP_SUMMARY"
        echo "- Workspace: \`${{ inputs.tf_workspace != '' && inputs.tf_workspace || 'default' }}\`" >> "$GITHUB_STEP_SUMMARY"
        echo "- Terraform version: \`${{ inputs.tf_version }}\`" >> "$GITHUB_STEP_SUMMARY"
